name: Publish

on:
  workflow_dispatch:
    inputs:
      create-tag:
        description: 'If a new tag should be created and pushed'
        required: true
        default: true
      upload-assets:
        description: 'If new assets should be generated and uploaded'
        required: true
        default: true

jobs:
  extract-info:
    runs-on: ubuntu-latest
    outputs:
      crate_version: ${{ steps.info.outputs.crate_version }}
      crate_name: ${{ steps.info.outputs.crate_name }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.repo }}
      - name: Extract info
        id: info
        # https://github.com/rust-cli/meta/issues/33
        # Thanks ashutoshrishi!
        run: |
          CRATE_NAME=$(awk -F ' = ' '$1 ~ /name/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml)
          CRATE_VERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml)
          CRATE_VERSION="v${CRATE_VERSION}"

          echo "Detected crate: ${CRATE_NAME}@${CRATE_VERSION}"

          echo "::set-output name=crate_version::${CRATE_VERSION}"
          echo "::set-output name=crate_name::${CRATE_NAME}"

  push-tag:
    if: ${{ github.event.inputs.create-tag }} == "true"
    needs: extract-info
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.tag.outputs.version_tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Create and push new tag
        id: tag
        # https://github.com/rust-cli/meta/issues/33
        # Thanks ashutoshrishi!
        run: |
          VERSION=${{needs.extract-info.outputs.crate_version}}

          if [[ "${{ github.event.inputs.create-tag }}" == "true" ]]
          then
            echo "Creating tag: ${VERSION}"
            git config --global user.name '${{ secrets.GIT_USERNAME }}'
            git config --global user.email '${{ secrets.GIT_EMAIL }}'
            git tag -a ${VERSION} -m ''
            git push origin refs/tags/${VERSION}
          elif [[ "${{ github.event.inputs.create-tag }}" == "false" ]]
          then
            echo "Skipping creation of new tag"
          else
            echo "Invalid value: create-tag: ${{ github.event.inputs.create-tag }}"
            echo "Aborting"
            exit 1
          fi

          echo "::set-output name=version_tag::${VERSION}"

  upload-assets:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          # TODO: Fix duplication of binary name
          - os: ubuntu-latest
            artifact_name: ${{needs.extract-info.outputs.crate_name}} # File name of cargo generated binary
            asset_name: ${{needs.extract-info.outputs.crate_name}}-${{needs.extract-info.outputs.crate_version}}-linux-amd64 # Name of asset uploaded to Github
          - os: windows-latest
            artifact_name: ${{needs.extract-info.outputs.crate_name}}.exe # File name of cargo generated binary
            asset_name: ${{needs.extract-info.outputs.crate_name}}-${{needs.extract-info.outputs.crate_version}}-windows-amd64 # Name of asset uploaded to Github
          - os: macos-latest
            artifact_name: ${{needs.extract-info.outputs.crate_name}} # File name of cargo generated binary
            asset_name: ${{needs.extract-info.outputs.crate_name}}-${{needs.extract-info.outputs.crate_version}}-macos-amd64 # Name of asset uploaded to Github

    name: Upload assets for ${{ matrix.os }}
    needs: [extract-info, push-tag]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install latest stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Build
      run: cargo build --release --locked
    - name: Upload binary to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{needs.push-tag.outputs.version_tag}}
        release_name: ${{needs.push-tag.outputs.version_tag}}
